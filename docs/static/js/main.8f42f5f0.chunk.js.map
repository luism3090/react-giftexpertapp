{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","console","log","useFetchGifs","GifExpertApp","categorias","i","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAMlB,SACI,uBACQO,UAAU,eACVC,KAAK,OACLC,MAAOV,EACPW,SAnBS,SAACR,GACtBF,EAAcE,EAAES,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAgBZM,GAhBY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAAnBJ,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACpC,OACI,sBAAKR,UAAU,yCAAf,UACI,qBAAKsB,IAAKd,EAAKe,IAAKL,IACpB,4BAAIA,QCAHM,EAAW,SAAC,GAAmB,IAAjBlB,EAAgB,EAAhBA,UAAgB,ECFf,SAACA,GAAe,IAAD,EAEbf,mBAAS,CAC/BsB,KAAM,GACNY,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KA2BvC,OApBAC,qBAAW,WAEPvB,EAAQC,GACHuB,MAAM,SAAAC,GAIHC,QAAQC,IAAIF,GAEZH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAMtB,CAAEnB,IAGEoB,EDvBuBO,CAAa3B,GAA/Ba,EAF2B,EAEhCN,KAAYY,EAFoB,EAEpBA,QAiBnB,OACI,qCACI,6BAAKnB,IACJmB,GAAW,WACZ,qBAAKzB,UAAU,YAAf,SAEYmB,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEYA,GADCA,EAAIC,aE5BhCiB,EAAe,WAAK,MAIO3C,mBAAS,CAAC,kBAJjB,mBAItB4C,EAJsB,KAIV7C,EAJU,KAa7B,OAEI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ6C,EAAWpB,KAAK,SAACT,EAAU8B,GAAX,OACZ,cAAC,EAAD,CAEgB9B,UAAWA,GADNA,EAAU8B,Y,MCvBvDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8f42f5f0.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const changeInputValue = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const submitValues = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>0){\r\n            setCategorias(cats => [ inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitValues}>\r\n            <input  \r\n                    className='addCategoria' \r\n                    type=\"text\" \r\n                    value={inputValue} \r\n                    onChange={changeInputValue}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias:PropTypes.func.isRequired\r\n}","import React from 'react';\r\n\r\nexport const getGifs = async ( categoria ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoria)}&limit=15&api_key=xUFDck609hDjhsKoYgDee1yJaTWAoPF6`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id,title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} /> \r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useEffect,useState} from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n//import { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const GifGrid =  ( {categoria} ) => {\r\n\r\n    const {data:images,loading} = useFetchGifs(categoria);\r\n\r\n    // console.log(data);\r\n    // console.log(loading);\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    \r\n    // useEffect( () => {\r\n\r\n    //     getGifs(categoria)\r\n    //         .then(imgs => setImages(imgs));\r\n        \r\n    //         //console.log(\"algo\");\r\n\r\n    // },[categoria]);\r\n\r\n    return (\r\n        <>\r\n            <h3>{categoria}</h3>\r\n            {loading && 'Cargando'}\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        images.map((img)=>(\r\n                            <GifGridItem \r\n                                    key={img.id}\r\n                                    {...img}\r\n                            />\r\n                        ))\r\n                    }\r\n            \r\n            </div>  \r\n        </>\r\n    )\r\n}\r\n","\r\nimport { useState, useEffect  } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs(categoria)\r\n            .then( imgs => {\r\n            \r\n            //setTimeout(() => {\r\n\r\n                console.log(imgs);\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n           // }, 1000);\r\n\r\n        })\r\n    }, [ categoria ] );\r\n\r\n    \r\n    return state;\r\n}\r\n","import React,{useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n    //const categorias = ['One puch', 'Samurai x', 'Dragon Ball'];\r\n\r\n    const [categorias, setCategorias] = useState(['Dragon Ball Z']);\r\n\r\n    // const agregarCategoria = () => {\r\n        \r\n    //     //setCategorias([...categorias,'Heroe1']);\r\n    //     setCategorias( cats => [ ...cats, 'Heroe' ] );\r\n        \r\n    // }\r\n    \r\n    return(\r\n\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={setCategorias} />\r\n            <hr/>\r\n        \r\n            <ol>\r\n                {\r\n                    categorias.map( (categoria,i) => (\r\n                        <GifGrid \r\n                                        key={categoria+i} \r\n                                        categoria={categoria} \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n\r\n\r\n    );\r\n\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp'\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}